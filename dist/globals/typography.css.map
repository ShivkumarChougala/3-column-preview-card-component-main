{"version":3,"sources":["globals/typography.scss","globals/typography.css","globals/variables.scss"],"names":[],"mappings":"AAMA,WACI,kCAAA,CACQ,sHAAA,CAER,iBAAA,CADA,eCJJ,CDOA,WACI,iCAAA,CACQ,mGAAA,CAER,iBAAA,CADA,eCJJ,CDQA,KACI,uBCNJ,CDQA,GACI,iCCLJ,CCHC,yBFWG,KACI,cCJN,CACF","file":"globals/typography.css","sourcesContent":["@use 'variables' as * ;\n@use 'sass:math';\n\n$Lexend-Deca:'Lexend Deca';\n$Big-Shoulders-Display:'Big Shoulders Display';\n\n@font-face {\n    font-family:'Lexend Deca', sans-serif;\n    @import url('https://fonts.googleapis.com/css2?family=Big+Shoulders+Display:wght@700&family=Lexend+Deca&display=swap');\n    font-weight: 400;\n    font-style: normal;\n}\n@font-face {\n    font-family:'Big Shoulders Display';\n    @import url('https://fonts.googleapis.com/css2?family=Big+Shoulders+Display:wght@700&display=swap');\n    font-weight: 700;\n    font-style: normal;\n}\n\nbody{\n    font-family:$Lexend-Deca;\n}\nh2{\n    font-family: $Big-Shoulders-Display;\n}\n@include breakpoint-up('medium'){\n    html{\n        font-size: 17px;\n    }\n\n}\n","@font-face {\n  font-family: \"Lexend Deca\", sans-serif;\n  @import url(\"https://fonts.googleapis.com/css2?family=Big+Shoulders+Display:wght@700&family=Lexend+Deca&display=swap\");\n  font-weight: 400;\n  font-style: normal;\n}\n@font-face {\n  font-family: \"Big Shoulders Display\";\n  @import url(\"https://fonts.googleapis.com/css2?family=Big+Shoulders+Display:wght@700&display=swap\");\n  font-weight: 700;\n  font-style: normal;\n}\nbody {\n  font-family: \"Lexend Deca\";\n}\n\nh2 {\n  font-family: \"Big Shoulders Display\";\n}\n\n@media (min-width: 800px) {\n  html {\n    font-size: 17px;\n  }\n}","// 640px, 1150px, 1400px\n$breakpoints-up: (\n\t'medium': '800px',\n\t'large': '1200px',\n\t'xlarge': '1400px',\n);\n\n// 639px, 1149px, 1399px\n$breakpoints-down: (\n\t'small': '699px',\n\t'medium': '1199px',\n\t'large': '1399px',\n);\n\n@mixin breakpoint-up($size) {\n\t@media (min-width: map-get($breakpoints-up, $size)) {\n\t\t@content;\n\t}\n}\n\n@mixin breakpoint-down($size) {\n\t@media (max-width: map-get($breakpoints-down, $size)) {\n\t\t@content;\n\t}\n}"]}